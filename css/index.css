/* start varibles  */
:root {
  --main-color: #2196f3;
  --main-color-alt: #1787e0;
  --padding-top-section: 100px;
  --padding-bottom-section: 100px;
  --transition: 0.3s;
  --section-background: #f6f6f6;
}
/* end varibles  */
/* start global rules  */
* {
  box-sizing: border-box;
}
html {
  scroll-behavior: smooth;
}
body {
  font-family: "Work Sans", sans-serif;
  margin: 0;
}
.container {
  padding-left: 15px;
  padding-right: 15px;
  margin-left: auto;
  margin-right: auto;
}
/* small  */
@media (min-width: 767px) {
  .container {
    width: 750px;
  }
}
/* medium  */
@media (min-width: 992px) {
  .container {
    width: 970px;
  }
}
/* large  */
@media (min-width: 1200px) {
  .container {
    width: 1170px;
  }
}
/* end global rules  */
/* start main component */
.main-title {
  background-color: var(--section-background);
  padding-top: 10px;
  padding-bottom: 10px;
  border-left: 5px solid var(--main-color);
}
.container.container-load {
  display: flex;
  justify-content: center;
}
.container-box {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 40px;
}
@media (min-width: 767px) {
  .container-box {
    padding-left: 0;
    padding-right: 0;
  }
}
.container-box .box {
  background-color: white;
  border-radius: 5px;
  box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
  transition: var(--transition);
}
.container-box .box:hover {
  transform: translateY(-10px);
  box-shadow: 0 2px 15px rgba(0, 0, 0, 0.2);
}
.container-box .box img {
  max-width: 100%;
  height: 250px;
}
.container-box .box .content {
  padding: 20px;
}
.container-box .box .content h3 {
  margin: 0;
}
.container-box .box .content p {
  color: #777;
  margin: 10px 0 0;
  line-height: 1.6;
}
.container-box .box .info {
  padding: 20px;
  border-top: 1px solid #e6e6e7;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.container-box .box .info a {
  text-decoration: none;
  color: var(--main-color);
  font-weight: bold;
}
.container-box .box .info i {
  color: var(--main-color);
}
.container-box .box:hover .info i {
  -webkit-animation: moving-arrow 0.6s linear infinite;
  animation: moving-arrow 0.6s linear infinite;
}
.more {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  padding: 8px;
  margin: 30px auto;
  background-color: var(--main-color);
  color: white;
  font-size: 20px;
  font-weight: bold;
  border: 1px solid white;
  cursor: pointer;
  transition: var(--transition);
}
.more:hover {
  background-color: var(--main-color-alt);
}
@-webkit-keyframes moving-arrow {
  100% {
    transform: translateX(10px);
  }
}
@keyframes moving-arrow {
  100% {
    transform: translateX(10px);
  }
}
@-webkit-keyframes left-move {
  50% {
    left: 0;
    width: 12px;
    height: 12px;
  }
  100% {
    left: 0;
    width: 51%;
    height: 100%;
    border-radius: 0;
  }
}
@keyframes left-move {
  50% {
    left: 0;
    width: 12px;
    height: 12px;
  }
  100% {
    left: 0;
    width: 51%;
    height: 100%;
    border-radius: 0;
  }
}
@-webkit-keyframes right-move {
  50% {
    right: 0;
    width: 12px;
    height: 12px;
  }
  100% {
    right: 0;
    width: 51%;
    height: 100%;
    border-radius: 0;
  }
}
@keyframes right-move {
  50% {
    right: 0;
    width: 12px;
    height: 12px;
  }
  100% {
    right: 0;
    width: 51%;
    height: 100%;
    border-radius: 0;
  }
}
/* end main component */
/* start header  */
.header {
  background-color: black;
}
.header .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 15px;
  padding-bottom: 15px;
}
.header .container .logo {
  font-size: 30px;
  font-weight: bold;
}
.header .container .logo a {
  text-decoration: none;
  color: white;
}
.header .container .search input {
  padding: 5px;
  border-radius: 10px;
  border: 0;
}
.header .container .search input:focus {
  outline: 1px solid var(--main-color);
}
@media (max-width: 767px) {
  .header .container .search input {
    width: 130px;
  }
}
.header .container .search button {
  background-color: var(--main-color);
  color: white;
  font-weight: bold;
  padding: 5px;
  border: 0;
  border-radius: 10px;
  cursor: pointer;
  transition: var(--transition);
}
.header .container .search button:hover {
  background-color: white;
  border: 1px solid var(--main-color);
  color: var(--main-color);
}
/* end header  */
/* start section links  */
.section-links {
  background-color: #f6f6f6;
  padding: 10px 0;
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 999;
}
.section-links ul {
  list-style: none;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  padding: 0;
}
@media (max-width: 767px) {
  .section-links ul {
    justify-content: center;
    gap: 20px;
  }
  .section-links ul li {
    flex-basis: calc((100% / 4) - 15px);
    text-align: center;
  }
}
.section-links ul li a {
  text-decoration: none;
  color: black;
  transition: 0.3s;
}
.section-links ul li a:hover {
  color: var(--main-color);
}
/* end section links  */
/* Top button */
#top {
  background-color: var(--main-color);
  color: white;
  position: fixed;
  bottom: 30px;
  right: 30px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

/* HTML: <div class="loader"></div> */
.loader {
  width: 50px;
  padding: 8px;
  aspect-ratio: 1;
  border-radius: 50%;
  background: #25b09b;
  --_m: conic-gradient(#0000 10%, #000), linear-gradient(#000 0 0) content-box;
  -webkit-mask: var(--_m);
  mask: var(--_m);
  -webkit-mask-composite: source-out;
  mask-composite: subtract;
  -webkit-animation: l3 1s infinite linear;
  animation: l3 1s infinite linear;
}
@-webkit-keyframes l3 {
  to {
    transform: rotate(1turn);
  }
}
@keyframes l3 {
  to {
    transform: rotate(1turn);
  }
}
